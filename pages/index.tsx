import { Layout } from 'antd'
import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import { useReducer, useState } from 'react'
import { Graph } from '..'
import Canvas from '../components/KnowledgeMap/index'
import { baseUrl } from '../config/baseUrl'
import useScreenSize from '../hooks/useScreenSize'
import { nodeRadius, basicDistence, arcAreaLength, arcAreaDistence, mode } from '../components/KnowledgeMap/defaultConfig'
import { ConfigContext } from '../context'
import { VisibleContext } from '../components/context'
import ControllerPannel from '../components/ControllerPannel'

const initState: Graph.ConfigProps = {
  nodeRadius,
  basicDistence,
  arcAreaDistence,
  arcAreaLength,
  mode,
  showDisctription: true,
  isStraight: true,
  besselRate: 2.2
}

const reducer = (state: typeof initState, action: Graph.ActionType) => {
  switch (action.type) {
    case 'setMode':
      return { ...state, mode: action.payload }
    case 'setAreaLength':
      return { ...state, arcAreaLength: action.payload }
    case 'setAreaDistence':
      return { ...state, arcAreaDistence: action.payload }
    case 'setNodeRadius':
      return { ...state, nodeRadius: action.payload }
    case 'setBasicDistence':
      return { ...state, basicDistence: action.payload }
    case 'setShowDiscription':
      return { ...state, showDisctription: action.payload }
    case 'setIsStraight':
      return { ...state, isStraight: action.payload }
    case 'setBesselRate':
      return { ...state, besselRate: action.payload }
  }
}

const Home: NextPage<{ data: { nodes: Graph.Node[]; edges: Graph.Edge[]; } }> = ({ data }) => {
  const { height } = useScreenSize()
  const [config, dispatch] = useReducer(reducer, initState)
  const [visible, setVisible] = useState<boolean>(false)
  return (
    <>
      <Head>
        <title>知识图谱</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Layout>
          <Layout.Header>
            <h1 style={{ color: '#fff' }}>知识图谱Demo</h1>
          </Layout.Header>
          <Layout style={{ minHeight: height - 70 }}>
            <ConfigContext.Provider value={{ config, dispatch }}>
              <Layout.Sider theme={'light'} style={{ minHeight: '90vh' }}>
                <ControllerPannel />
              </Layout.Sider>
              <Layout.Content style={{ height: height - 70 }}>
                <VisibleContext.Provider value={{ visible, setVisible }}>
                  <Canvas nodes={data.nodes} edges={data.edges} config={config} />
                </VisibleContext.Provider>
              </Layout.Content>
            </ConfigContext.Provider>
          </Layout>
        </Layout>
      </main>
    </>
  )
}

export const getServerSideProps: GetServerSideProps = async () => {
  const res = await fetch(`${baseUrl}/api/graph`)
  const data: Api.GraphResponse = await res.json()
  return {
    props: {
      data: data.data
    },
  }
}

export default Home
